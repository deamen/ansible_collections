---
- name: Ensure ansible_facts used by role
  ansible.builtin.setup:
    gather_subset: "{{ __certificate_required_facts_subsets }}"
  when: __certificate_required_facts | difference(ansible_facts.keys() | list) | length > 0

- name: Determine if system is ostree and set flag
  when: not __certificate_is_ostree is defined
  block:
    - name: Check if system is ostree
      ansible.builtin.stat:
        path: /run/ostree-booted
      register: __ostree_booted_stat

    - name: Set flag to indicate system is ostree
      ansible.builtin.set_fact:
        __certificate_is_ostree: "{{ __ostree_booted_stat.stat.exists }}"

- name: Set platform/version specific variables
  ansible.builtin.include_vars: "{{ __vars_file }}"
  loop:
    - "{{ ansible_facts['os_family'] }}.yml"
    - "{{ ansible_facts['distribution'] }}.yml"
    - >-
      {{ ansible_facts['distribution'] ~ '_' ~
      ansible_facts['distribution_major_version'] }}.yml
    - >-
      {{ ansible_facts['distribution'] ~ '_' ~
      ansible_facts['distribution_version'] }}.yml
  vars:
    __vars_file: "{{ role_path }}/vars/{{ item }}"
  when: __vars_file is file

- name: Set cert_dir if not already set
  ansible.builtin.set_fact:
    cert_dir: "{{ __cert_dir }}"
  when: cert_dir == ""

- name: Set key_dir if not already set
  ansible.builtin.set_fact:
    key_dir: "{{ __key_dir }}"
  when: key_dir == ""

- name: Set cert_file if not already set
  ansible.builtin.set_fact:
    cert_file: "{{ __cert_file }}"
  when: cert_file == ""

- name: Set key_file if not already set
  ansible.builtin.set_fact:
    key_file: "{{ __key_file }}"
  when: key_file == ""
